[{"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/App/App.js":"1","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Fabric/index.js":"2","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Fabric/createIndex.js":"3","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/services/service.js":"4","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/serviceWorker.js":"5","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Home/Home.js":"6","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/index.js":"7","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Fabric/indexList.js":"8","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/http-common/http-common.js":"9","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Auth/Login.js":"10"},{"size":5069,"mtime":1610765407645,"results":"11","hashOfConfig":"12"},{"size":4505,"mtime":1610767980460,"results":"13","hashOfConfig":"12"},{"size":9202,"mtime":1610765941711,"results":"14","hashOfConfig":"12"},{"size":598,"mtime":1610684547900,"results":"15","hashOfConfig":"12"},{"size":5341,"mtime":1610609774992,"results":"16","hashOfConfig":"12"},{"size":145,"mtime":1610684706806,"results":"17","hashOfConfig":"12"},{"size":1098,"mtime":1610765109775,"results":"18","hashOfConfig":"12"},{"size":181,"mtime":1610610347978,"results":"19","hashOfConfig":"12"},{"size":167,"mtime":1610610674676,"results":"20","hashOfConfig":"12"},{"size":140,"mtime":1610764862696,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1rtci0l",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/App/App.js",["44"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Fabric/index.js",["45","46"],"import React, { useState, useEffect } from 'react';\nimport ServiceFabric from '../.././../services/service';\nimport MUIDataTable  from 'mui-datatables';\nimport {Link} from 'react-router-dom';\n\nconst Index = () => {\n    const [fabric_, setFabric_] = useState([]);\n\n    useEffect(async () => {\n        const result = await ServiceFabric.getAll();\n        const data_ = result.data.data\n        setFabric_(data_)\n    })\n\n    // const classes = useStyles();\n    \n    const columns = [\n        {\n            name: \"id\",\n            label: \"No\",\n            options: {\n                filter: true,\n                sort: true\n            }\n        },\n        {\n            name: \"fabric_type\",\n            label: \"Fabric Type\",\n            options: {\n                filter: true,\n                sort: true\n            }\n        },\n        {\n            name: \"machine_id\",\n            label: \"Machine\",\n            options: {\n                filter: true,\n                sort: false\n            }\n        },\n        {\n            name: \"po_number\",\n            label: \"Po Number\",\n            options: {\n                filter: true,\n                sort: false\n            }\n        },\n        {\n            name: \"id\",\n            label: \"Actions\",\n            options: {\n                customBodyRender: (value, tableMeta, updateValue) => {\n                    console.log(value, tableMeta);\n                    return (<button className=\"btn btn-primary btn-sm\"><i className=\"fa fa-eye\"></i></button>);\n                }\n            }\n        }\n    ];\n\n    const options = {\n        // filterType: \"checkbox\",\n        filterType: \"dropdown\",\n        responsive: \"stacked\",\n        onRowsDelete: rowsDeleted => {\n            // axios.delete('http://127.0.0.1:8000/api/inventory/deleteAll/' + id).then(result => {\n            // })\n            // console.log(result.data[0].dataIndex);\n            // console.log(rowsDeleted, \"were deleted!\");\n        }\n    };\n\n    return (<div>\n        <div className=\"page-content\">\n            <div className=\"page-header\">\n                <h1>\n                    Top Menu Style\n                    <small>\n                        <i className=\"ace-icon fa fa-angle-double-right\" />\n                        top menu &amp; navigation\n                    </small>\n                </h1>\n            </div>\n            {/* /.page-header */}\n            <div className=\"row\">\n                <div className=\"col-xs-12\">\n                {/* <div className=\"pull-right form-group\">\n                    <button className=\"btn btn-sm btn-primary\">New Fabric</button>\n                </div> */}\n                {/* PAGE CONTENT BEGINS */}\n                    {/* <table className=\"table table-bordered table-hover table-responsive\">\n                        <thead>\n                            <tr>\n                                <th>No</th>\n                                <th>Fabric Types</th>\n                                <th>Brand</th>\n                                <th>PO Number</th>\n                                <th>Created</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {fabric_.map((row) => {\n                                return (<tr>\n                                    <td>{row.id}</td>\n                                    <td>{row.fabric_type}</td>\n                                    <td>{row.brand}</td>\n                                    <td>{row.po_number}</td>\n                                    <td>{row.created_at}</td>\n                                </tr>)\n                            })}\n                        </tbody>\n                    </table> */}\n                    <MUIDataTable className=\"table table-boredered\"\n                        title={\n                            <div>\n                                {\" \"}\n                                <Link to=\"add-inventory\">\n                                    <button className=\"btn btn-primary btn-sm\">New</button>\n                                </Link>{\" \"}\n                            </div>\n                        }\n                        data={fabric_}\n                        columns={columns}\n                        options={options}\n                    />{\" \"}\n                    {/* PAGE CONTENT ENDS */}\n                </div>\n                {/* /.col */}\n            </div>\n            {/* /.row */}\n        </div>\n        {/* /.page-content */}\n    </div>)\n}\n\nexport default Index","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Fabric/createIndex.js",["47","48","49","50","51","52","53","54"],"import React, { useState, useEffect } from 'react';\nimport ServiceFabric from '../.././../services/service';\n\nconst CreateIndex = () => {\n    const initialize = {\n        id: null,\n        fabric_type: \"\",\n        machine_id: \"\",\n        brand: \"\",\n        po_number: \"\",\n    }\n\n    const [fabric, setFabric] = useState(initialize);\n    const [submitted, setSubmitted] = useState(false);\n    const [fabric_, setFabric_] = useState([]);\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setFabric({ ...fabric, [name]: value });\n        console.log(value)\n    }\n\n    const saveFabric = () => {\n        var data = {\n            fabric_type: fabric.fabric_type,\n            machine_id: fabric.machine_id,\n            brand: fabric.brand,\n            po_number: fabric.po_number\n        };\n\n        ServiceFabric.create(data).then(res => {\n\n            setFabric({\n                id: res.data.id,\n                fabric_type: res.data.fabric_type,\n                machine_id: res.data.machine_id,\n                brand: res.data.brand,\n                po_number: res.data.po_number\n            });\n\n            setSubmitted(true);\n            console.log(console.data);\n        })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    useEffect(async () => {\n        const result = await ServiceFabric.getAll();\n        const data_ = result.data.data\n        setFabric_(data_)\n    })\n\n    return (\n        <div>\n            <div className=\"page-content\">\n                <div className=\"page-header\">\n                    <h1>\n                        Top Menu Style\n            <small>\n                            <i className=\"ace-icon fa fa-angle-double-right\" />\n                            top menu &amp; navigation\n            </small>\n                    </h1>\n                </div>\n                {/* /.page-header */}\n                <div className=\"row\">\n                    <div className=\"col-xs-12 col-sm-12 col-md-12\">\n                    <div className=\"row\">\n                            <div className=\"col-xs-12 col-sm-12\">\n                                <div className=\"widget-box\">\n                                    <div className=\"widget-header\">\n                                        <h4 className=\"widget-title\">Masked Input</h4>\n                                        <span className=\"widget-toolbar\">\n                                            <a href=\"#\" data-action=\"settings\">\n                                                <i className=\"ace-icon fa fa-cog\" />\n                                            </a>\n                                            <a href=\"#\" data-action=\"reload\">\n                                                <i className=\"ace-icon fa fa-refresh\" />\n                                            </a>\n                                            <a href=\"#\" data-action=\"collapse\">\n                                                <i className=\"ace-icon fa fa-chevron-up\" />\n                                            </a>\n                                            <a href=\"#\" data-action=\"close\">\n                                                <i className=\"ace-icon fa fa-times\" />\n                                            </a>\n                                        </span>\n                                    </div>\n                                    <div className=\"widget-body\">\n                                        <div className=\"widget-main\">\n\n                        <div className=\"submit-form\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <div className=\"col-12-xs col-12-md col-12-sm\">\n                                        <div className=\"row\">\n                                            <div className=\"col-md-12 col-sm-6\">\n                                                <div className=\"from-group\">\n                                                    <label htmlFor=\"fabric-type\">Fabirc Type</label>\n                                                    <input type=\"text\"\n                                                        className=\"form-control\"\n                                                        id=\"fabric_type\"\n                                                        required value={fabric.fabric_type}\n                                                        onChange={handleInputChange}\n                                                        name=\"fabric_type\"\n                                                        autoComplete=\"off\" />\n                                                </div>\n                                            </div>\n                                            <div className=\"col-md-12 col-sm-6\">\n                                                <div className=\"from-group\">\n                                                    <label htmlFor=\"machine_id\">Machine Type</label>\n                                                    <input type=\"text\"\n                                                        className=\"form-control\"\n                                                        id=\"machine_id\"\n                                                        required value={fabric.machine_id}\n                                                        onChange={handleInputChange}\n                                                        name=\"machine_id\"\n                                                        autoComplete=\"off\" />\n                                                </div>\n                                            </div>\n                                            <div className=\"col-md-12 col-sm-6\">\n                                                <div className=\"from-group\">\n                                                    <label htmlFor=\"brand\">Brand</label>\n                                                    <input type=\"text\"\n                                                        className=\"form-control\"\n                                                        id=\"brand\"\n                                                        required value={fabric.brand}\n                                                        onChange={handleInputChange}\n                                                        name=\"brand\"\n                                                        autoComplete=\"off\" />\n                                                </div>\n                                            </div>\n                                            <div className=\"col-md-12 col-sm-6\">\n                                                <div className=\"from-group\">\n                                                    <label htmlFor=\"po_number\">PO Number</label>\n                                                    <input type=\"text\"\n                                                        className=\"form-control\"\n                                                        id=\"po_number\"\n                                                        required value={fabric.po_number}\n                                                        onChange={handleInputChange}\n                                                        name=\"po_number\"\n                                                        autoComplete=\"off\" />\n                                                </div>\n                                            </div>\n                                            <div className=\"col-md-12 col-sm-12\">\n                                                <div className=\"form-group\">\n                                                    <button onClick={saveFabric} className=\"btn btn-sm btn-primary\">\n                                                        Submit\n                                        </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>{/* /.span */}\n                        </div>\n                    </div>\n                    <div className=\"col-xs-12\">\n                        {/* PAGE CONTENT BEGINS */}\n                        <div className=\"alert alert-info visible-sm visible-xs\">\n                            <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\n                                <i className=\"ace-icon fa fa-times\" />\n                            </button>\n                            Please note that\n               <span className=\"blue bolder\">top menu style</span>\n                            is visible only in devices larger than\n               <span className=\"blue bolder\">991px</span>\n                            which you can change using CSS builder tool.\n            </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\n\nexport default CreateIndex;","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/services/service.js",["55"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/serviceWorker.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Home/Home.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/index.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Fabric/indexList.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/http-common/http-common.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Auth/Login.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"56","line":125,"column":7},{"ruleId":"57","severity":1,"message":"58","line":9,"column":5,"nodeType":"59","endLine":9,"endColumn":14,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":9,"column":15,"nodeType":"62","endLine":13,"endColumn":6},{"ruleId":"63","severity":1,"message":"64","line":14,"column":12,"nodeType":"59","messageId":"65","endLine":14,"endColumn":21},{"ruleId":"63","severity":1,"message":"66","line":15,"column":12,"nodeType":"59","messageId":"65","endLine":15,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":49,"column":5,"nodeType":"59","endLine":49,"endColumn":14,"suggestions":"67"},{"ruleId":"57","severity":1,"message":"61","line":49,"column":15,"nodeType":"62","endLine":53,"endColumn":6},{"ruleId":"68","severity":1,"message":"69","line":76,"column":45,"nodeType":"70","endLine":76,"endColumn":80},{"ruleId":"68","severity":1,"message":"69","line":79,"column":45,"nodeType":"70","endLine":79,"endColumn":78},{"ruleId":"68","severity":1,"message":"69","line":82,"column":45,"nodeType":"70","endLine":82,"endColumn":80},{"ruleId":"68","severity":1,"message":"69","line":85,"column":45,"nodeType":"70","endLine":85,"endColumn":77},{"ruleId":"71","severity":1,"message":"72","line":27,"column":1,"nodeType":"73","endLine":34,"endColumn":5},"Parsing error: Expected corresponding JSX closing tag for <div>\n\n  123 |           </div>\n  124 |         </div>\n> 125 |       </body>\n      |       ^\n  126 |     </div>\n  127 |   );\n  128 | }","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFabric_'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["74"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'submitted' is assigned a value but never used.","unusedVar","'fabric_' is assigned a value but never used.",["75"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"76","fix":"77"},{"desc":"76","fix":"78"},"Add dependencies array: []",{"range":"79","text":"80"},{"range":"81","text":"80"},[415,415],", []",[1456,1456]]
[{"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/TblSchedule.js":"1","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/Schedules.js":"2","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/ScheduleIndex.js":"3","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/http-common/http-common.js":"4","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/index.js":"5","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/services/history.js":"6","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/App/App.js":"7","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Auth/Login.js":"8","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Csv/downloadXls.js":"9","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Machine/Create.js":"10","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/Show.js":"11","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Fabric/createIndex.js":"12","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Machine/Index.js":"13","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/services/service.js":"14","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Home/Home.js":"15","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/Create.js":"16","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/serviceWorker.js":"17","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/data/events-utc-group.js":"18","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Fabric/datatable.js":"19","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Machine/Tbl.js":"20","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Job/Index.js":"21","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Job/Tbljob.js":"22","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Job/Create.js":"23","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Machine/Form.js":"24","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Customer/Index.js":"25","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Customer/TblCustomer.js":"26","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Customer/Create.js":"27"},{"size":14942,"mtime":1611624761918,"results":"28","hashOfConfig":"29"},{"size":5409,"mtime":1611214681664,"results":"30","hashOfConfig":"29"},{"size":1713,"mtime":1611625309988,"results":"31","hashOfConfig":"29"},{"size":167,"mtime":1610610674676,"results":"32","hashOfConfig":"29"},{"size":1392,"mtime":1611631151683,"results":"33","hashOfConfig":"29"},{"size":87,"mtime":1611286779170,"results":"34","hashOfConfig":"29"},{"size":10889,"mtime":1611729020496,"results":"35","hashOfConfig":"29"},{"size":140,"mtime":1610764862696,"results":"36","hashOfConfig":"29"},{"size":1407,"mtime":1610932352885,"results":"37","hashOfConfig":"29"},{"size":474,"mtime":1611042080621,"results":"38","hashOfConfig":"29"},{"size":2233,"mtime":1611370606802,"results":"39","hashOfConfig":"29"},{"size":11189,"mtime":1611042477823,"results":"40","hashOfConfig":"29"},{"size":1504,"mtime":1611037065948,"results":"41","hashOfConfig":"29"},{"size":1244,"mtime":1611717373577,"results":"42","hashOfConfig":"29"},{"size":145,"mtime":1610684706806,"results":"43","hashOfConfig":"29"},{"size":6714,"mtime":1611714881203,"results":"44","hashOfConfig":"29"},{"size":5341,"mtime":1610609774992,"results":"45","hashOfConfig":"29"},{"size":24781,"mtime":1611124438504,"results":"46","hashOfConfig":"29"},{"size":1651,"mtime":1611026211557,"results":"47","hashOfConfig":"29"},{"size":1475,"mtime":1611029657853,"results":"48","hashOfConfig":"29"},{"size":1406,"mtime":1611719574736,"results":"49","hashOfConfig":"29"},{"size":2989,"mtime":1611718956358,"results":"50","hashOfConfig":"29"},{"size":2874,"mtime":1611719945594,"results":"51","hashOfConfig":"29"},{"size":6017,"mtime":1611043050491,"results":"52","hashOfConfig":"29"},{"size":1092,"mtime":1611722586724,"results":"53","hashOfConfig":"29"},{"size":3320,"mtime":1611728681049,"results":"54","hashOfConfig":"29"},{"size":12054,"mtime":1611730563629,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rtci0l",{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"69"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/TblSchedule.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/Schedules.js",["126","127","128","129"],"// import React...\nimport React, {useEffect} from 'react';\n\n// import { Scheduler, TimelineView } from '@progress/kendo-react-scheduler';\n// import { sampleData, displayDate } from './data/events-utc-.js';\n// import { Day } from '@progress/kendo-date-math';\n// import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { Scheduler, TimelineView } from '@progress/kendo-react-scheduler';\nimport { sampleDataWithResources, displayDate } from './data/events-utc-group.js';\nimport ServiceFabric from '../.././../services/service';\n\nimport '@progress/kendo-theme-default/dist/all.css';\n   \nconst ExampleComponent = () => {\n  const [orientation, setOrientation] = React.useState('vertical');\n  const [schedule, setSchedule] = React.useState([]);\n\n    const handleOrientationChange = React.useCallback(\n        (event) => { setOrientation(event.target.value) },\n        [setOrientation]\n    );\n\n    useEffect(() => {\n      async function fecthApi() {\n          const result = await ServiceFabric.getSchedule();\n          setSchedule(result.data);\n      }\n      fecthApi();\n  }, [])\n\n\n    const currentYear = new Date().getFullYear();\n    const parseAdjust = (eventDate) => {\n        const date = new Date(eventDate);\n        date.setFullYear(currentYear);\n        return date;\n    };\n\n    const now = new Date();\n\n    const randomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\n    const sampleDataWithResources = schedule.map(dataItem => (\n        console.log(dataItem),\n        {\n            id: dataItem.id,\n            start: parseAdjust(dataItem.start),\n            // startTimezone: dataItem.startTimezone,\n            end: parseAdjust(dataItem.end),\n            // endTimezone: dataItem.endTimezone,\n            isAllDay: false,\n            title: dataItem.title,\n            description: dataItem.description,\n            // recurrenceRule: dataItem.RecurrenceRule,\n            // recurrenceId: dataItem.RecurrenceID,\n            // recurrenceExceptions: dataItem.RecurrenceException,\n            roomId: randomInt(1, 2),\n            personId: randomInt(2, 1),\n        }\n    ));\n  return (\n    <div className=\"page-content\">\n      <div className=\"page-header\">\n      <h1>\n                        Top Menu Style\n                    <small>\n                            <i className=\"ace-icon fa fa-angle-double-right\" />\n                            top menu &amp; navigation\n                    </small>\n                    </h1>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-xs-12 col-md-12 col-sm-12\">\n        {/* <Scheduler\n              data={sampleData}\n              defaultDate={displayDate}\n          >\n              <TimelineView\n                  title=\"Hour-By-Hour\"\n\n                  numberOfDays={2}\n\n                  columnWidth={100}\n                  slotDuration={60}\n                  slotDivisions={1}\n\n                  startTime={\"08:00\"}\n                  endTime={\"18:00\"}\n\n                  workDayStart={\"09:00\"}\n                  workDayEnd={\"17:00\"}\n\n                  workWeekStart={Day.Sunday}\n                  workWeekEnd={Day.Monday}\n\n                  showWorkHours={false}\n              />\n          </Scheduler> */}\n          <label>\n                      Horizontal &nbsp;\n                      <input type=\"radio\" value=\"horizontal\" checked={orientation === 'horizontal'} onChange={handleOrientationChange} />\n                  </label>\n                  &nbsp;\n              <label>\n                      Vertical &nbsp;\n                      <input type=\"radio\" value=\"vertical\" checked={orientation === 'vertical'} onChange={handleOrientationChange} />\n                  </label>\n              </div>\n              <Scheduler\n                  data={sampleDataWithResources}\n                  defaultDate={displayDate}\n                  group={{\n                      resources: ['Rooms', 'Persons'],\n                      orientation\n                  }}\n                  resources={[\n                      {\n                          name: 'Rooms',\n                          data: [\n                              { text: 'Meeting Room 101', value: 1 },\n                              { text: 'Meeting Room 201', value: 2, color: 'green' }\n                          ],\n                          field: 'roomId',\n                          valueField: 'value',\n                          textField: 'text',\n                          colorField: 'color'\n                      },\n                      {\n                          name: 'Persons',\n                          data: [\n                              { text: 'Peter', value: 1, color: 'red' },\n                              { text: 'Alex', value: 2 }\n                          ],\n                          field: 'personId',\n                          valueField: 'value',\n                          textField: 'text',\n                          colorField: 'color'\n                      }]}\n              >\n                  <TimelineView\n                      title=\"Hour-By-Hour\"\n\n                      columnWidth={100}\n                      slotDuration={60}\n                      slotDivisions={7}\n                      numberOfDays={2}\n\n                      workDayStart={\"08:00\"}\n                      workDayEnd={\"18:00\"}\n                  />\n              </Scheduler>\n        </div>\n    </div>\n  )\n}\n\nexport default ExampleComponent\n  ",["130","131"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/ScheduleIndex.js",[],["132","133"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/http-common/http-common.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/index.js",[],["134","135"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/services/history.js",[],["136","137"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/App/App.js",["138","139","140","141","142","143","144","145"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Auth/Login.js",[],["146","147"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Csv/downloadXls.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Machine/Create.js",[],["148","149"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/Show.js",["150"],"import React, { useState, useEffect } from 'react';\nimport Service from '../.././../services/service';\nconst ScheduleShow = (props) => {\n    const [schedule, setSchedule] = useState([]);\n\n    useEffect(() => {\n        async function fecthApi() {\n            const result = await Service.getIdSchedule();\n            setSchedule(result.data);\n        }\n        fecthApi();\n    }, [])\n    return (\n        <div>\n             <div className=\"page-content\">\n                        <div className=\"form-group\">\n                            <div className=\"form-inline\">\n                                <div className=\"pull-right\">\n                                    <div className=\"form-group\">\n                                        <button className=\"btn btn-sm btn-primary\">Tambah Jadwal</button>\n                                    </div>\n                                    &nbsp;\n                                    <div className=\"form-group\">\n                                        <button className=\"btn btn-sm btn-primary\" onClick={this.closeModal}>Close</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                            <tr>\n                                <th>No</th>\n                                <th>Date</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>{this.state.id}</td>\n                                <td>title</td>\n                                <td>{this.state.description}</td>\n                                <td>{this.state.is_all_day}</td>\n                                <td>job_id</td>\n                                <td>machine_id</td>\n                                <td>owner_id</td>\n                                <td>end</td>\n                                <td>end</td>\n                            </tr>\n                        </tbody>\n                    </table>\n        </div>\n    )\n}\n\n\nexport default ScheduleShow;",["151","152"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Fabric/createIndex.js",["153","154","155","156","157","158"],"import React, { useState, useEffect } from 'react';\nimport ServiceFabric from '../.././../services/service';\nimport { Link } from 'react-router-dom';\n\nconst CreateIndex = () => {\n    const initialize = {\n        id: null,\n        fabric_type: \"\",\n        machine_id: \"\",\n        brand: \"\",\n        po_number: \"\",\n    }\n\n    const [fabric, setFabric] = useState(initialize);\n    const [submitted, setSubmitted] = useState(false);\n    // const [fabric_, setFabric_] = useState([]);\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setFabric({ ...fabric, [name]: value });\n    }\n\n    const saveFabric = () => {\n        var data = {\n            fabric_type: fabric.fabric_type,\n            machine_id: fabric.machine_id,\n            brand: fabric.brand,\n            po_number: fabric.po_number\n        };\n\n        ServiceFabric.create(data).then(res => {\n\n            setFabric({\n                id: res.data.id,\n                fabric_type: res.data.fabric_type,\n                machine_id: res.data.machine_id,\n                brand: res.data.brand,\n                po_number: res.data.po_number\n            });\n\n            setSubmitted(true);\n            // console.log(console.data);\n        })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    // useEffect(async () => {\n    //     const result = await ServiceFabric.getAll();\n    //     const data_ = result.data.data\n    //     setFabric_(data_)\n    // })\n\n    return (\n        <div>\n            <div className=\"page-content\">\n                <div className=\"page-header\">\n                    <h1>\n                        Top Menu Style\n            <small>\n                            <i className=\"ace-icon fa fa-angle-double-right\" />\n                            top menu &amp; navigation\n            </small>\n                    </h1>\n                </div>\n                {/* /.page-header */}\n                <div className=\"row\">\n                    <div className=\"col-xs-12 col-sm-12 col-md-12\">\n                        <div className=\"row\">\n                            <div className=\"col-xs-12 col-sm-12\">\n                                <div className=\"widget-box\">\n                                    <div className=\"widget-header\">\n                                        <h4 className=\"widget-title\">Masked Input</h4>\n                                        <span className=\"widget-toolbar\">\n                                            <a href=\"#\" data-action=\"settings\">\n                                                <i className=\"ace-icon fa fa-cog\" />\n                                            </a>\n                                            <a href=\"#\" data-action=\"reload\">\n                                                <i className=\"ace-icon fa fa-refresh\" />\n                                            </a>\n                                            <a href=\"#\" data-action=\"collapse\">\n                                                <i className=\"ace-icon fa fa-chevron-up\" />\n                                            </a>\n                                            <a href=\"#\" data-action=\"close\">\n                                                <i className=\"ace-icon fa fa-times\" />\n                                            </a>\n                                        </span>\n                                    </div>\n                                    <div className=\"widget-body\">\n                                        <div className=\"widget-main\">\n\n                                            <div className=\"submit-form\">\n                                                <div className=\"card\">\n                                                    <div className=\"card-body\">\n                                                        <div className=\"col-12-xs col-12-md col-12-sm\">\n                                                            <div className=\"row\">\n                                                                <div className=\"col-md-12 col-xs-12 col-sm-6\">\n                                                                    <div className=\"from-group\">\n                                                                        <label htmlFor=\"fabric-type\">Fabirc Type</label>\n                                                                        <input type=\"text\"\n                                                                            className=\"form-control\"\n                                                                            id=\"fabric_type\"\n                                                                            required value={fabric.fabric_type}\n                                                                            onChange={handleInputChange}\n                                                                            name=\"fabric_type\"\n                                                                            autoComplete=\"off\" />\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"col-md-12 col-xs-12 col-sm-6\">\n                                                                    <div className=\"from-group\">\n                                                                        <label htmlFor=\"machine_id\">Machine Type</label>\n                                                                        <input type=\"text\"\n                                                                            className=\"form-control\"\n                                                                            id=\"machine_id\"\n                                                                            required value={fabric.machine_id}\n                                                                            onChange={handleInputChange}\n                                                                            name=\"machine_id\"\n                                                                            autoComplete=\"off\" />\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"col-md-12  col-xs-12 col-sm-6\">\n                                                                    <div className=\"from-group\">\n                                                                        <label htmlFor=\"brand\">Brand</label>\n                                                                        <input type=\"text\"\n                                                                            className=\"form-control\"\n                                                                            id=\"brand\"\n                                                                            required value={fabric.brand}\n                                                                            onChange={handleInputChange}\n                                                                            name=\"brand\"\n                                                                            autoComplete=\"off\" />\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"col-md-12 col-xs-12  col-sm-6\">\n                                                                    <div className=\"from-group\">\n                                                                        <label htmlFor=\"po_number\">PO Number</label>\n                                                                        <input type=\"text\"\n                                                                            className=\"form-control\"\n                                                                            id=\"po_number\"\n                                                                            required value={fabric.po_number}\n                                                                            onChange={handleInputChange}\n                                                                            name=\"po_number\"\n                                                                            autoComplete=\"off\" />\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"col-md-12 col-xs-12 col-sm-12\">\n                                                                    <div className=\"form-inline pull-right\">\n                                                                        <div className=\"btn-group\">\n                                                                            <hr />\n                                                                            <Link to=\"/fabric/list\">\n                                                                                <button className=\"btn btn-primary btn-sm\">Back</button>\n                                                                            </Link>\n                                                                            <button onClick={saveFabric} className=\"btn btn-sm btn-success\">\n                                                                                Submit\n                                                    </button>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>{/* /.span */}\n                        </div>\n                    </div>\n                    <div className=\"col-xs-12\">\n                        {/* PAGE CONTENT BEGINS */}\n                        <div className=\"alert alert-info visible-sm visible-xs\">\n                            <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\n                                <i className=\"ace-icon fa fa-times\" />\n                            </button>\n                            Please note that\n               <span className=\"blue bolder\">top menu style</span>\n                            is visible only in devices larger than\n               <span className=\"blue bolder\">991px</span>\n                            which you can change using CSS builder tool.\n            </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\n\nexport default CreateIndex;","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Machine/Index.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/services/service.js",["159"],"import http from '../http-common/http-common';\n\nconst getAll = () => {\n    return http.get('/fabric');\n}\n\nconst get = id => {\n    return http.get(`/fabric/${id}`);\n}\n\nconst create = data => {\n    return http.post(\"/fabric/store\", data);\n}\n\n\n// Machine\n\nconst getMachine = () => {\n    return http.get('/machine');\n}\n\nconst createMachine = data => {\n    return http.post('/machine/store', data);\n}\n\n\n// Schedule\n\nconst getSchedule = () => {\n    return http.get('/schedules');\n}\n\nconst getIdSchedule = id => {\n    return http.get(`/schedules/show/${id}`);\n}\n\nconst postSchedule = data => {\n    return http.post('/schedules/store', data);\n}\n\n// Job\n\nconst getJob = () => {\n    return http.get('/job');\n}\n\nconst postJob = data => {\n    return http.post('/job/store', data);\n}\n\n// const update = (id, data) => {\n//     return http.put(`/fabric/index/${id}`, data);\n// }\n\n// const remove = id => {\n//     return http.delete(`/fabric/index/${id}`);\n// }\n\n// const removeAll = () => {\n//     return http.delete(`/fabric/index/`);\n// }\n\nexport default {\n    getAll,\n    get,\n    create,\n    getMachine,\n    createMachine,\n    getSchedule,\n    getIdSchedule,\n    postSchedule,\n    getJob,\n    postJob,\n    // update,\n    // remove,\n    // removeAll,\n  };\n","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Home/Home.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/Create.js",["160","161","162","163","164","165"],"import React from 'react';\nimport Select from 'react-select';\nimport Service from '../.././../services/service';\nimport { DateTimePicker, DropdownList } from 'react-widgets'\nconst moment = require('moment');\n\nconst date = moment().format('YYYY-MM-dd');\n\n\nconst options = [\n    { value: 'chocolate', label: 'Chocolate' },\n    { value: 'strawberry', label: 'Strawberry' },\n    { value: 'vanilla', label: 'Vanilla' },\n];\n\n\nclass ScheduleCreate extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            machine: [],\n            date: moment().format(\"yyyy-MM-d\"),\n            job_id: '',\n            machineId: '',\n        }\n    }\n\n    async getMachine() {\n        const res = await Service.getMachine().then(res => {\n            this.setState({ machine: res.data.data });\n        });\n    }\n\n    componentDidMount() {\n        this.getMachine();\n    }\n\n    handleChange = selectedOption => {\n        this.setState({ job_id: selectedOption.value });\n        // console.log(`Option selected:`, selectedOption);\n    };\n\n    onMachineChanged = (e) => {\n        this.setState({\n            machineId: e.currentTarget.value\n        })\n        console.log(e.currentTarget.value)\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const data = {\n            date: this.state.date,\n            job_id: this.state.job_id\n        }\n\n        const data1 = Service.postSchedule(data);\n\n        console.log(data1);\n    }\n\n\n    render() {\n        return (\n            <div className=\"page-content\">\n                <div className=\"page-header\">\n                    Jadwal Baru\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"panel panel-default\">\n                        <div className=\"panel-body\">\n                            <div className=\"alert alert-info text-center\" role=\"alert\">\n                                Perhatian!<br />\n                                Karu bertanggungjawab mengisi Jam Mulai &amp; Jam Selesai Jadwalnya masing-masing.<br />\n                                Proses yang sudah selesai harus di-update dengan Jam Mulai &amp; Jam Selesai aktual!\n              </div>\n\n                            {/* Content */}\n\n                            <form className=\"form-horizontal\" role=\"form\">\n                                <div className=\"form-group\">\n                                    <label className=\"col-sm-3 control-label no-padding-right\" htmlFor=\"form-field-1\"> Tanggal </label>\n                                    <div className=\"col-sm-9\">\n                                        <DateTimePicker\n                                            // initialValue={new Date()}\n                                            // value={this.state.value}\n                                            // onChange={() => this.handleDate(this.state.initialValue)}\n                                            defaultValue={new Date()}\n                                            selected={this.state.date}\n                                            onChange={(newDate) => this.setState({ date: moment(newDate).format(\"yyyy-MM-d\") })}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label className=\"col-sm-3 control-label no-padding-right\" htmlFor=\"form-field-1-1\"> Urutan Mesin </label>\n                                    <div className=\"col-sm-9\">\n                                        {this.state.machine.map((result) => {\n                                            return (\n                                                <label className=\"radio-inline\">\n                                                    <input type=\"radio\" name=\"site_name\" \n                                                    value={result.short_name}\n                                                    name={this.state.machineId}\n                                                    onChange={this.onMachineChanged}\n                                                    checked={this.state.machineId === result.short_name}/>\n                                                    {result.short_name}\n                                                </label>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                                <div className=\"space-4\" />\n                                <div className=\"form-group\">\n                                    <label className=\"col-sm-3 control-label no-padding-right\" htmlFor=\"form-field-1-1\"> Nomor Jobs </label>\n                                    <div className=\"col-sm-9\">\n                                        <Select onChange={this.handleChange} options={this.state.machine.map(e => ({ label: e.short_name, value: e.id }))} />\n                                    </div>\n                                </div>\n                                <div className=\"space-4\" />\n                                <div className=\"form-group\">\n                                    <label className=\"col-sm-3 control-label no-padding-right\" htmlFor=\"form-field-1-1\"> Catatan Timeline </label>\n                                    <div className=\"col-sm-9\">\n                                        <input type=\"textarea\" id=\"form-field-1-1\" placeholder=\"Text Field\" className=\"form-control\" />\n                                    </div>\n                                </div>\n                                <div className=\"clearfix form-actions\">\n                                    <div className=\"col-md-offset-3 col-md-9\">\n                                        <button className=\"btn btn-info\" type=\"button\" onClick={this.handleSubmit}>\n                                            <i className=\"ace-icon fa fa-check bigger-110\" />\n                                            Submit</button>\n                                        &nbsp; &nbsp; &nbsp;\n                                        <button className=\"btn\" type=\"reset\">\n                                            <i className=\"ace-icon fa fa-undo bigger-110\" />\n                                            Reset</button>\n                                    </div>\n                                </div>\n                                <div className=\"hr hr-24\" />\n                            </form>\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ScheduleCreate;","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/serviceWorker.js",[],["166","167"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/data/events-utc-group.js",[],["168","169"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Fabric/datatable.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Machine/Tbl.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Job/Index.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Job/Tbljob.js",["170","171","172","173","174"],"import React from 'react';\nimport Service from '../.././../services/service';\nimport '../../../assets/css/jquery.dataTables.css'\nimport { Link } from 'react-router-dom';\nimport * as ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nconst $ = require('jquery')\n\nclass TblJob extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            jobs: []\n        }\n    }\n\n    async getJobs() {\n        const result = await Service.getJob();\n        this.setState({ jobs: result.data.result });\n    }\n\n\n    componentDidMount() {\n        this.getJobs().then(() => this.sync());\n    }\n\n    sync() {\n\n        this.$el = $(this.el);\n        this.$el.DataTable({\n            dom: '<\"data-table-wrapper\">',\n            data: this.state.jobs, //option 1\n            // data: this.getmachineData1(), //option 2\n            columns: [\n                { title: \"No\", data: \"id\" },\n                { title: \"Process Number\", data: \"process_number\" },\n                { title: \"PO Number\", data: \"po_number\" },\n                { title: \"Create\", data: \"created_at\" },\n                { title: \"Update\", data: \"updated_at\" },\n                { title: \"Action\", data: null },\n\n            ],\n            \"order\": [[0, \"asc\"]],\n            columnDefs: [\n                {\n                    targets: [5],\n                    width: 100,\n                    className: \"center\",\n                    createdCell: (td, cellData, rowData) =>\n                        ReactDOM.render(\n                            <div>\n                                <div className=\"form-inline\">\n                                    <div className=\"form-group\">\n                                        <a href=\"#\"><i className=\"fa fa-eye ace-icon bigger-130\"></i></a>&nbsp;\n                                   </div>\n                                    <div className=\"form-group\">\n                                        <a href=\"#\" className=\"green\"><i className=\"fa fa-pencil ace-icon bigger-130\"></i></a>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <a href=\"#\" className=\"red\"><i className=\"fa fa-trash ace-icon bigger-130\"></i></a>\n                                    </div>\n                                </div>\n                            </div>\n                            // <button onClick={() => this.setState({ navigate: true })}></button>                               \n                            , td\n                        ),\n                }\n            ]\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <table\n                    className=\"table table=bordered table-stripped table-hover table-responsive display\"\n                    width=\"100%\"\n                    cellSpacing=\"0\"\n                    ref={(el) => (this.el = el)}\n                ></table>\n            </div>\n        )\n    }\n}\n\nexport default TblJob","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Job/Create.js",["175"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Machine/Form.js",["176","177","178","179","180","181"],"import React, { useState, useEffect } from 'react';\nimport ServiceFabric from '../.././../services/service';\nimport { Link } from 'react-router-dom';\n\nconst FormMachine = () => {\n    const initialize = {\n        id: null,\n        name: \"\",\n        short_name: \"\",\n        type_machine: \"\",\n    }\n\n    const [machine_, setMachine] = useState(initialize);\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setMachine({ ...machine_, [name]: value });\n    }\n\n    const saveMachine = () => {\n        var data = {\n            name: machine_.name,\n            short_name: machine_.short_name,\n            type_machine: machine_.type_machine,\n        };\n\n        ServiceFabric.createMachine(data).then(res => {\n            console.log(res);\n        })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    return (\n        <div>\n            <div className=\"widget-box\">\n                <div className=\"widget-header\">\n                    <h4 className=\"widget-title\">Masked Input</h4>\n                    <span className=\"widget-toolbar\">\n                        <a href=\"#\" data-action=\"settings\">\n                            <i className=\"ace-icon fa fa-cog\" />\n                        </a>\n                        <a href=\"#\" data-action=\"reload\">\n                            <i className=\"ace-icon fa fa-refresh\" />\n                        </a>\n                        <a href=\"#\" data-action=\"collapse\">\n                            <i className=\"ace-icon fa fa-chevron-up\" />\n                        </a>\n                        <a href=\"#\" data-action=\"close\">\n                            <i className=\"ace-icon fa fa-times\" />\n                        </a>\n                    </span>\n                </div>\n                <div className=\"widget-body\">\n                    <div className=\"widget-main\">\n\n                        <div className=\"submit-form\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <div className=\"col-12-xs col-12-md col-12-sm\">\n                                        <div className=\"row\">\n                                            <div className=\"col-md-12 col-xs-12 col-sm-6\">\n                                                <div className=\"from-group\">\n                                                    <label htmlFor=\"name-type\">Machine Name</label>\n                                                    <input type=\"text\"\n                                                        className=\"form-control\"\n                                                        id=\"name\"\n                                                        required value={machine_.name}\n                                                        onChange={handleInputChange}\n                                                        name=\"name\"\n                                                        autoComplete=\"off\" />\n                                                </div>\n                                            </div>\n                                            <div className=\"col-md-12 col-xs-12 col-sm-6\">\n                                                <div className=\"from-group\">\n                                                    <label htmlFor=\"short_name\">Short Name</label>\n                                                    <input type=\"text\"\n                                                        className=\"form-control\"\n                                                        id=\"short_name\"\n                                                        required value={machine_.short_name}\n                                                        onChange={handleInputChange}\n                                                        name=\"short_name\"\n                                                        autoComplete=\"off\" />\n                                                </div>\n                                            </div>\n                                            <div className=\"col-md-12  col-xs-12 col-sm-6\">\n                                                <div className=\"from-group\">\n                                                    <label htmlFor=\"brand\">Type Machine</label>\n                                                    <input type=\"text\"\n                                                        className=\"form-control\"\n                                                        id=\"type_machine\"\n                                                        required value={machine_.type_machine}\n                                                        onChange={handleInputChange}\n                                                        name=\"type_machine\"\n                                                        autoComplete=\"off\" />\n                                                </div>\n                                            </div>\n                                            <div className=\"col-md-12 col-xs-12 col-sm-12\">\n                                                <div className=\"form-inline pull-right\">\n                                                    <div className=\"btn-group\">\n                                                        <hr />\n                                                        <button className=\"btn btn-sm btn-success\" onClick={saveMachine}>\n                                                            Submit\n                                                    </button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\n\nexport default FormMachine;","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Customer/Index.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Customer/TblCustomer.js",["182","183","184","185","186"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Customer/Create.js",["187","188"],{"ruleId":"189","severity":1,"message":"190","line":8,"column":13,"nodeType":"191","messageId":"192","endLine":8,"endColumn":21},{"ruleId":"189","severity":1,"message":"193","line":11,"column":10,"nodeType":"191","messageId":"192","endLine":11,"endColumn":33},{"ruleId":"189","severity":1,"message":"194","line":41,"column":11,"nodeType":"191","messageId":"192","endLine":41,"endColumn":14},{"ruleId":"195","severity":1,"message":"196","line":46,"column":30,"nodeType":"197","messageId":"198","endLine":46,"endColumn":31},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"199","replacedBy":"203"},{"ruleId":"201","replacedBy":"204"},{"ruleId":"199","replacedBy":"205"},{"ruleId":"201","replacedBy":"206"},{"ruleId":"199","replacedBy":"207"},{"ruleId":"201","replacedBy":"208"},{"ruleId":"189","severity":1,"message":"209","line":2,"column":31,"nodeType":"191","messageId":"192","endLine":2,"endColumn":37},{"ruleId":"189","severity":1,"message":"210","line":17,"column":8,"nodeType":"191","messageId":"192","endLine":17,"endColumn":15},{"ruleId":"211","severity":1,"message":"212","line":59,"column":17,"nodeType":"213","endLine":59,"endColumn":57},{"ruleId":"211","severity":1,"message":"212","line":108,"column":17,"nodeType":"213","endLine":108,"endColumn":57},{"ruleId":"211","severity":1,"message":"212","line":132,"column":17,"nodeType":"213","endLine":132,"endColumn":57},{"ruleId":"211","severity":1,"message":"212","line":150,"column":17,"nodeType":"213","endLine":150,"endColumn":57},{"ruleId":"211","severity":1,"message":"212","line":168,"column":17,"nodeType":"213","endLine":168,"endColumn":57},{"ruleId":"211","severity":1,"message":"212","line":200,"column":17,"nodeType":"213","endLine":200,"endColumn":57},{"ruleId":"199","replacedBy":"214"},{"ruleId":"201","replacedBy":"215"},{"ruleId":"199","replacedBy":"216"},{"ruleId":"201","replacedBy":"217"},{"ruleId":"189","severity":1,"message":"218","line":4,"column":12,"nodeType":"191","messageId":"192","endLine":4,"endColumn":20},{"ruleId":"199","replacedBy":"219"},{"ruleId":"201","replacedBy":"220"},{"ruleId":"189","severity":1,"message":"221","line":1,"column":27,"nodeType":"191","messageId":"192","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"222","line":15,"column":12,"nodeType":"191","messageId":"192","endLine":15,"endColumn":21},{"ruleId":"211","severity":1,"message":"212","line":76,"column":45,"nodeType":"213","endLine":76,"endColumn":80},{"ruleId":"211","severity":1,"message":"212","line":79,"column":45,"nodeType":"213","endLine":79,"endColumn":78},{"ruleId":"211","severity":1,"message":"212","line":82,"column":45,"nodeType":"213","endLine":82,"endColumn":80},{"ruleId":"211","severity":1,"message":"212","line":85,"column":45,"nodeType":"213","endLine":85,"endColumn":77},{"ruleId":"223","severity":1,"message":"224","line":63,"column":1,"nodeType":"225","endLine":77,"endColumn":5},{"ruleId":"189","severity":1,"message":"226","line":4,"column":26,"nodeType":"191","messageId":"192","endLine":4,"endColumn":38},{"ruleId":"189","severity":1,"message":"227","line":7,"column":7,"nodeType":"191","messageId":"192","endLine":7,"endColumn":11},{"ruleId":"189","severity":1,"message":"228","line":10,"column":7,"nodeType":"191","messageId":"192","endLine":10,"endColumn":14},{"ruleId":"189","severity":1,"message":"229","line":31,"column":15,"nodeType":"191","messageId":"192","endLine":31,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":84,"column":29,"nodeType":"213","endLine":84,"endColumn":75},{"ruleId":"232","severity":1,"message":"233","line":106,"column":53,"nodeType":"234","endLine":106,"endColumn":80},{"ruleId":"199","replacedBy":"235"},{"ruleId":"201","replacedBy":"236"},{"ruleId":"199","replacedBy":"237"},{"ruleId":"201","replacedBy":"238"},{"ruleId":"189","severity":1,"message":"239","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":14},{"ruleId":"189","severity":1,"message":"240","line":6,"column":8,"nodeType":"191","messageId":"192","endLine":6,"endColumn":13},{"ruleId":"211","severity":1,"message":"212","line":55,"column":41,"nodeType":"213","endLine":55,"endColumn":53},{"ruleId":"211","severity":1,"message":"212","line":58,"column":41,"nodeType":"213","endLine":58,"endColumn":71},{"ruleId":"211","severity":1,"message":"212","line":61,"column":41,"nodeType":"213","endLine":61,"endColumn":69},{"ruleId":"230","severity":1,"message":"231","line":23,"column":25,"nodeType":"213","endLine":23,"endColumn":71},{"ruleId":"189","severity":1,"message":"221","line":1,"column":27,"nodeType":"191","messageId":"192","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"239","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":14},{"ruleId":"211","severity":1,"message":"212","line":41,"column":25,"nodeType":"213","endLine":41,"endColumn":60},{"ruleId":"211","severity":1,"message":"212","line":44,"column":25,"nodeType":"213","endLine":44,"endColumn":58},{"ruleId":"211","severity":1,"message":"212","line":47,"column":25,"nodeType":"213","endLine":47,"endColumn":60},{"ruleId":"211","severity":1,"message":"212","line":50,"column":25,"nodeType":"213","endLine":50,"endColumn":57},{"ruleId":"189","severity":1,"message":"239","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":14},{"ruleId":"189","severity":1,"message":"240","line":6,"column":8,"nodeType":"191","messageId":"192","endLine":6,"endColumn":13},{"ruleId":"211","severity":1,"message":"212","line":67,"column":41,"nodeType":"213","endLine":67,"endColumn":53},{"ruleId":"211","severity":1,"message":"212","line":70,"column":41,"nodeType":"213","endLine":70,"endColumn":71},{"ruleId":"211","severity":1,"message":"212","line":73,"column":41,"nodeType":"213","endLine":73,"endColumn":69},{"ruleId":"189","severity":1,"message":"241","line":21,"column":13,"nodeType":"191","messageId":"192","endLine":21,"endColumn":22},{"ruleId":"189","severity":1,"message":"242","line":21,"column":25,"nodeType":"191","messageId":"192","endLine":21,"endColumn":36},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'sampleDataWithResources' is defined but never used.","'now' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-native-reassign",["243"],"no-negated-in-lhs",["244"],["243"],["244"],["243"],["244"],["243"],["244"],"'Router' is defined but never used.","'history' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["243"],["244"],["243"],["244"],"'schedule' is assigned a value but never used.",["243"],["244"],"'useEffect' is defined but never used.","'submitted' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'DropdownList' is defined but never used.","'date' is assigned a value but never used.","'options' is assigned a value but never used.","'res' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["243"],["244"],["243"],["244"],"'Link' is defined but never used.","'Modal' is defined but never used.","'customers' is assigned a value but never used.","'setCustomer' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
[{"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/TblSchedule.js":"1","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/Schedules.js":"2","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/ScheduleIndex.js":"3","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/http-common/http-common.js":"4","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/index.js":"5","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/services/history.js":"6","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/App/App.js":"7","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Auth/Login.js":"8","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Csv/downloadXls.js":"9","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Machine/Create.js":"10","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/Show.js":"11","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Fabric/createIndex.js":"12","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Machine/Index.js":"13","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/services/service.js":"14","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Home/Home.js":"15","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/Create.js":"16","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/serviceWorker.js":"17","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/data/events-utc-group.js":"18","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Fabric/datatable.js":"19","/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Machine/Tbl.js":"20"},{"size":14942,"mtime":1611624761918,"results":"21","hashOfConfig":"22"},{"size":5409,"mtime":1611214681664,"results":"23","hashOfConfig":"22"},{"size":1713,"mtime":1611625309988,"results":"24","hashOfConfig":"22"},{"size":167,"mtime":1610610674676,"results":"25","hashOfConfig":"22"},{"size":1392,"mtime":1611631151683,"results":"26","hashOfConfig":"22"},{"size":87,"mtime":1611286779170,"results":"27","hashOfConfig":"22"},{"size":7945,"mtime":1611625059203,"results":"28","hashOfConfig":"22"},{"size":140,"mtime":1610764862696,"results":"29","hashOfConfig":"22"},{"size":1407,"mtime":1610932352885,"results":"30","hashOfConfig":"22"},{"size":474,"mtime":1611042080621,"results":"31","hashOfConfig":"22"},{"size":2233,"mtime":1611370606802,"results":"32","hashOfConfig":"22"},{"size":11189,"mtime":1611042477823,"results":"33","hashOfConfig":"22"},{"size":1504,"mtime":1611037065948,"results":"34","hashOfConfig":"22"},{"size":985,"mtime":1611281102136,"results":"35","hashOfConfig":"22"},{"size":145,"mtime":1610684706806,"results":"36","hashOfConfig":"22"},{"size":5841,"mtime":1611633715230,"results":"37","hashOfConfig":"22"},{"size":5341,"mtime":1610609774992,"results":"38","hashOfConfig":"22"},{"size":24781,"mtime":1611124438504,"results":"39","hashOfConfig":"22"},{"size":1651,"mtime":1611026211557,"results":"40","hashOfConfig":"22"},{"size":1475,"mtime":1611029657853,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rtci0l",{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":1,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/TblSchedule.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/Schedules.js",["92","93","94","95"],"// import React...\nimport React, {useEffect} from 'react';\n\n// import { Scheduler, TimelineView } from '@progress/kendo-react-scheduler';\n// import { sampleData, displayDate } from './data/events-utc-.js';\n// import { Day } from '@progress/kendo-date-math';\n// import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { Scheduler, TimelineView } from '@progress/kendo-react-scheduler';\nimport { sampleDataWithResources, displayDate } from './data/events-utc-group.js';\nimport ServiceFabric from '../.././../services/service';\n\nimport '@progress/kendo-theme-default/dist/all.css';\n   \nconst ExampleComponent = () => {\n  const [orientation, setOrientation] = React.useState('vertical');\n  const [schedule, setSchedule] = React.useState([]);\n\n    const handleOrientationChange = React.useCallback(\n        (event) => { setOrientation(event.target.value) },\n        [setOrientation]\n    );\n\n    useEffect(() => {\n      async function fecthApi() {\n          const result = await ServiceFabric.getSchedule();\n          setSchedule(result.data);\n      }\n      fecthApi();\n  }, [])\n\n\n    const currentYear = new Date().getFullYear();\n    const parseAdjust = (eventDate) => {\n        const date = new Date(eventDate);\n        date.setFullYear(currentYear);\n        return date;\n    };\n\n    const now = new Date();\n\n    const randomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\n    const sampleDataWithResources = schedule.map(dataItem => (\n        console.log(dataItem),\n        {\n            id: dataItem.id,\n            start: parseAdjust(dataItem.start),\n            // startTimezone: dataItem.startTimezone,\n            end: parseAdjust(dataItem.end),\n            // endTimezone: dataItem.endTimezone,\n            isAllDay: false,\n            title: dataItem.title,\n            description: dataItem.description,\n            // recurrenceRule: dataItem.RecurrenceRule,\n            // recurrenceId: dataItem.RecurrenceID,\n            // recurrenceExceptions: dataItem.RecurrenceException,\n            roomId: randomInt(1, 2),\n            personId: randomInt(2, 1),\n        }\n    ));\n  return (\n    <div className=\"page-content\">\n      <div className=\"page-header\">\n      <h1>\n                        Top Menu Style\n                    <small>\n                            <i className=\"ace-icon fa fa-angle-double-right\" />\n                            top menu &amp; navigation\n                    </small>\n                    </h1>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-xs-12 col-md-12 col-sm-12\">\n        {/* <Scheduler\n              data={sampleData}\n              defaultDate={displayDate}\n          >\n              <TimelineView\n                  title=\"Hour-By-Hour\"\n\n                  numberOfDays={2}\n\n                  columnWidth={100}\n                  slotDuration={60}\n                  slotDivisions={1}\n\n                  startTime={\"08:00\"}\n                  endTime={\"18:00\"}\n\n                  workDayStart={\"09:00\"}\n                  workDayEnd={\"17:00\"}\n\n                  workWeekStart={Day.Sunday}\n                  workWeekEnd={Day.Monday}\n\n                  showWorkHours={false}\n              />\n          </Scheduler> */}\n          <label>\n                      Horizontal &nbsp;\n                      <input type=\"radio\" value=\"horizontal\" checked={orientation === 'horizontal'} onChange={handleOrientationChange} />\n                  </label>\n                  &nbsp;\n              <label>\n                      Vertical &nbsp;\n                      <input type=\"radio\" value=\"vertical\" checked={orientation === 'vertical'} onChange={handleOrientationChange} />\n                  </label>\n              </div>\n              <Scheduler\n                  data={sampleDataWithResources}\n                  defaultDate={displayDate}\n                  group={{\n                      resources: ['Rooms', 'Persons'],\n                      orientation\n                  }}\n                  resources={[\n                      {\n                          name: 'Rooms',\n                          data: [\n                              { text: 'Meeting Room 101', value: 1 },\n                              { text: 'Meeting Room 201', value: 2, color: 'green' }\n                          ],\n                          field: 'roomId',\n                          valueField: 'value',\n                          textField: 'text',\n                          colorField: 'color'\n                      },\n                      {\n                          name: 'Persons',\n                          data: [\n                              { text: 'Peter', value: 1, color: 'red' },\n                              { text: 'Alex', value: 2 }\n                          ],\n                          field: 'personId',\n                          valueField: 'value',\n                          textField: 'text',\n                          colorField: 'color'\n                      }]}\n              >\n                  <TimelineView\n                      title=\"Hour-By-Hour\"\n\n                      columnWidth={100}\n                      slotDuration={60}\n                      slotDivisions={7}\n                      numberOfDays={2}\n\n                      workDayStart={\"08:00\"}\n                      workDayEnd={\"18:00\"}\n                  />\n              </Scheduler>\n        </div>\n    </div>\n  )\n}\n\nexport default ExampleComponent\n  ",["96","97"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/ScheduleIndex.js",[],["98","99"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/http-common/http-common.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/index.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/services/history.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/App/App.js",["100","101","102","103","104","105"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Auth/Login.js",[],["106","107"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Csv/downloadXls.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Machine/Create.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/Show.js",["108"],"import React, { useState, useEffect } from 'react';\nimport Service from '../.././../services/service';\nconst ScheduleShow = (props) => {\n    const [schedule, setSchedule] = useState([]);\n\n    useEffect(() => {\n        async function fecthApi() {\n            const result = await Service.getIdSchedule();\n            setSchedule(result.data);\n        }\n        fecthApi();\n    }, [])\n    return (\n        <div>\n             <div className=\"page-content\">\n                        <div className=\"form-group\">\n                            <div className=\"form-inline\">\n                                <div className=\"pull-right\">\n                                    <div className=\"form-group\">\n                                        <button className=\"btn btn-sm btn-primary\">Tambah Jadwal</button>\n                                    </div>\n                                    &nbsp;\n                                    <div className=\"form-group\">\n                                        <button className=\"btn btn-sm btn-primary\" onClick={this.closeModal}>Close</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                            <tr>\n                                <th>No</th>\n                                <th>Date</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>{this.state.id}</td>\n                                <td>title</td>\n                                <td>{this.state.description}</td>\n                                <td>{this.state.is_all_day}</td>\n                                <td>job_id</td>\n                                <td>machine_id</td>\n                                <td>owner_id</td>\n                                <td>end</td>\n                                <td>end</td>\n                            </tr>\n                        </tbody>\n                    </table>\n        </div>\n    )\n}\n\n\nexport default ScheduleShow;",["109","110"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Fabric/createIndex.js",["111","112","113","114","115","116"],"import React, { useState, useEffect } from 'react';\nimport ServiceFabric from '../.././../services/service';\nimport { Link } from 'react-router-dom';\n\nconst CreateIndex = () => {\n    const initialize = {\n        id: null,\n        fabric_type: \"\",\n        machine_id: \"\",\n        brand: \"\",\n        po_number: \"\",\n    }\n\n    const [fabric, setFabric] = useState(initialize);\n    const [submitted, setSubmitted] = useState(false);\n    // const [fabric_, setFabric_] = useState([]);\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setFabric({ ...fabric, [name]: value });\n    }\n\n    const saveFabric = () => {\n        var data = {\n            fabric_type: fabric.fabric_type,\n            machine_id: fabric.machine_id,\n            brand: fabric.brand,\n            po_number: fabric.po_number\n        };\n\n        ServiceFabric.create(data).then(res => {\n\n            setFabric({\n                id: res.data.id,\n                fabric_type: res.data.fabric_type,\n                machine_id: res.data.machine_id,\n                brand: res.data.brand,\n                po_number: res.data.po_number\n            });\n\n            setSubmitted(true);\n            // console.log(console.data);\n        })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    // useEffect(async () => {\n    //     const result = await ServiceFabric.getAll();\n    //     const data_ = result.data.data\n    //     setFabric_(data_)\n    // })\n\n    return (\n        <div>\n            <div className=\"page-content\">\n                <div className=\"page-header\">\n                    <h1>\n                        Top Menu Style\n            <small>\n                            <i className=\"ace-icon fa fa-angle-double-right\" />\n                            top menu &amp; navigation\n            </small>\n                    </h1>\n                </div>\n                {/* /.page-header */}\n                <div className=\"row\">\n                    <div className=\"col-xs-12 col-sm-12 col-md-12\">\n                        <div className=\"row\">\n                            <div className=\"col-xs-12 col-sm-12\">\n                                <div className=\"widget-box\">\n                                    <div className=\"widget-header\">\n                                        <h4 className=\"widget-title\">Masked Input</h4>\n                                        <span className=\"widget-toolbar\">\n                                            <a href=\"#\" data-action=\"settings\">\n                                                <i className=\"ace-icon fa fa-cog\" />\n                                            </a>\n                                            <a href=\"#\" data-action=\"reload\">\n                                                <i className=\"ace-icon fa fa-refresh\" />\n                                            </a>\n                                            <a href=\"#\" data-action=\"collapse\">\n                                                <i className=\"ace-icon fa fa-chevron-up\" />\n                                            </a>\n                                            <a href=\"#\" data-action=\"close\">\n                                                <i className=\"ace-icon fa fa-times\" />\n                                            </a>\n                                        </span>\n                                    </div>\n                                    <div className=\"widget-body\">\n                                        <div className=\"widget-main\">\n\n                                            <div className=\"submit-form\">\n                                                <div className=\"card\">\n                                                    <div className=\"card-body\">\n                                                        <div className=\"col-12-xs col-12-md col-12-sm\">\n                                                            <div className=\"row\">\n                                                                <div className=\"col-md-12 col-xs-12 col-sm-6\">\n                                                                    <div className=\"from-group\">\n                                                                        <label htmlFor=\"fabric-type\">Fabirc Type</label>\n                                                                        <input type=\"text\"\n                                                                            className=\"form-control\"\n                                                                            id=\"fabric_type\"\n                                                                            required value={fabric.fabric_type}\n                                                                            onChange={handleInputChange}\n                                                                            name=\"fabric_type\"\n                                                                            autoComplete=\"off\" />\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"col-md-12 col-xs-12 col-sm-6\">\n                                                                    <div className=\"from-group\">\n                                                                        <label htmlFor=\"machine_id\">Machine Type</label>\n                                                                        <input type=\"text\"\n                                                                            className=\"form-control\"\n                                                                            id=\"machine_id\"\n                                                                            required value={fabric.machine_id}\n                                                                            onChange={handleInputChange}\n                                                                            name=\"machine_id\"\n                                                                            autoComplete=\"off\" />\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"col-md-12  col-xs-12 col-sm-6\">\n                                                                    <div className=\"from-group\">\n                                                                        <label htmlFor=\"brand\">Brand</label>\n                                                                        <input type=\"text\"\n                                                                            className=\"form-control\"\n                                                                            id=\"brand\"\n                                                                            required value={fabric.brand}\n                                                                            onChange={handleInputChange}\n                                                                            name=\"brand\"\n                                                                            autoComplete=\"off\" />\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"col-md-12 col-xs-12  col-sm-6\">\n                                                                    <div className=\"from-group\">\n                                                                        <label htmlFor=\"po_number\">PO Number</label>\n                                                                        <input type=\"text\"\n                                                                            className=\"form-control\"\n                                                                            id=\"po_number\"\n                                                                            required value={fabric.po_number}\n                                                                            onChange={handleInputChange}\n                                                                            name=\"po_number\"\n                                                                            autoComplete=\"off\" />\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"col-md-12 col-xs-12 col-sm-12\">\n                                                                    <div className=\"form-inline pull-right\">\n                                                                        <div className=\"btn-group\">\n                                                                            <hr />\n                                                                            <Link to=\"/fabric/list\">\n                                                                                <button className=\"btn btn-primary btn-sm\">Back</button>\n                                                                            </Link>\n                                                                            <button onClick={saveFabric} className=\"btn btn-sm btn-success\">\n                                                                                Submit\n                                                    </button>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>{/* /.span */}\n                        </div>\n                    </div>\n                    <div className=\"col-xs-12\">\n                        {/* PAGE CONTENT BEGINS */}\n                        <div className=\"alert alert-info visible-sm visible-xs\">\n                            <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\n                                <i className=\"ace-icon fa fa-times\" />\n                            </button>\n                            Please note that\n               <span className=\"blue bolder\">top menu style</span>\n                            is visible only in devices larger than\n               <span className=\"blue bolder\">991px</span>\n                            which you can change using CSS builder tool.\n            </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\n\nexport default CreateIndex;",["117","118"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Machine/Index.js",[],["119","120"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/services/service.js",["121"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Home/Home.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/Create.js",["122","123","124"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/serviceWorker.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Schedules/data/events-utc-group.js",[],["125","126"],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Fabric/datatable.js",[],"/home/ilyas/Documents/apps-fabrics/dev-frontend/src/container/pages/Machine/Tbl.js",[],{"ruleId":"127","severity":1,"message":"128","line":8,"column":13,"nodeType":"129","messageId":"130","endLine":8,"endColumn":21},{"ruleId":"127","severity":1,"message":"131","line":11,"column":10,"nodeType":"129","messageId":"130","endLine":11,"endColumn":33},{"ruleId":"127","severity":1,"message":"132","line":41,"column":11,"nodeType":"129","messageId":"130","endLine":41,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":46,"column":30,"nodeType":"135","messageId":"136","endLine":46,"endColumn":31},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"137","replacedBy":"141"},{"ruleId":"139","replacedBy":"142"},{"ruleId":"127","severity":1,"message":"143","line":2,"column":31,"nodeType":"129","messageId":"130","endLine":2,"endColumn":37},{"ruleId":"127","severity":1,"message":"144","line":17,"column":8,"nodeType":"129","messageId":"130","endLine":17,"endColumn":15},{"ruleId":"145","severity":1,"message":"146","line":53,"column":17,"nodeType":"147","endLine":53,"endColumn":57},{"ruleId":"145","severity":1,"message":"146","line":103,"column":17,"nodeType":"147","endLine":103,"endColumn":57},{"ruleId":"145","severity":1,"message":"146","line":135,"column":17,"nodeType":"147","endLine":135,"endColumn":57},{"ruleId":"148","severity":2,"message":"149","line":180,"column":62,"nodeType":"129","messageId":"150","endLine":180,"endColumn":64},{"ruleId":"137","replacedBy":"151"},{"ruleId":"139","replacedBy":"152"},{"ruleId":"127","severity":1,"message":"153","line":4,"column":12,"nodeType":"129","messageId":"130","endLine":4,"endColumn":20},{"ruleId":"137","replacedBy":"154"},{"ruleId":"139","replacedBy":"155"},{"ruleId":"127","severity":1,"message":"156","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"157","line":15,"column":12,"nodeType":"129","messageId":"130","endLine":15,"endColumn":21},{"ruleId":"145","severity":1,"message":"146","line":76,"column":45,"nodeType":"147","endLine":76,"endColumn":80},{"ruleId":"145","severity":1,"message":"146","line":79,"column":45,"nodeType":"147","endLine":79,"endColumn":78},{"ruleId":"145","severity":1,"message":"146","line":82,"column":45,"nodeType":"147","endLine":82,"endColumn":80},{"ruleId":"145","severity":1,"message":"146","line":85,"column":45,"nodeType":"147","endLine":85,"endColumn":77},{"ruleId":"137","replacedBy":"158"},{"ruleId":"139","replacedBy":"159"},{"ruleId":"137","replacedBy":"160"},{"ruleId":"139","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":49,"column":1,"nodeType":"164","endLine":60,"endColumn":5},{"ruleId":"127","severity":1,"message":"165","line":6,"column":7,"nodeType":"129","messageId":"130","endLine":6,"endColumn":14},{"ruleId":"127","severity":1,"message":"166","line":23,"column":15,"nodeType":"129","messageId":"130","endLine":23,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":63,"column":29,"nodeType":"147","endLine":63,"endColumn":75},{"ruleId":"137","replacedBy":"169"},{"ruleId":"139","replacedBy":"170"},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'sampleDataWithResources' is defined but never used.","'now' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-native-reassign",["171"],"no-negated-in-lhs",["172"],["171"],["172"],"'Router' is defined but never used.","'history' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-undef","'Sc' is not defined.","undef",["171"],["172"],"'schedule' is assigned a value but never used.",["171"],["172"],"'useEffect' is defined but never used.","'submitted' is assigned a value but never used.",["171"],["172"],["171"],["172"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'options' is assigned a value but never used.","'res' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.",["171"],["172"],"no-global-assign","no-unsafe-negation"]